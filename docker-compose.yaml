version: "3.8"
services:
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
  database:
    image: postgres:latest
    container_name:
      pg-rpc-endpoint
    environment:
      - POSTGRES_PASSWORD=dasfdsafsadfsdfs
      - POSTGRES_USER=postgres
      - POSTGRES_DB=test
    healthcheck:
      test:  [ "CMD", "pg_isready", "-q", "-d", "test", "-U", "postgres" ]
      interval: 3s
      timeout: 3s
      retries: 5
    ports:
      - "9432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  migrate:
    image: migrate/migrate
    volumes:
      - ./sql/psql:/migrations
    command: [ "-path", "/migrations", "-database",  "postgres://postgres:postgres@pg-rpc-endpoint:5432/test?sslmode=disable", "up" ]
    links:
      - database
    depends_on:
      database:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-app
    environment:
      LISTEN_ADDR: ":9000"
      REDIS_ADDR: "redis:6379"
      SIGNING_KEY: "0x607a11b45a7219cc61a3d9c5fd08c7eebd602a6a19a977f8d3771d5711a550f2"
      PROXY_URL: "http://65.108.101.32:8545"
      RELAY_URL: "http://65.108.101.32:8545"
      PSQL_CONN: "postgres://postgres:dasfdsafsadfsdfs@database:5432/test?sslmode=disable"
    ports:
      - "9545:9000"
    depends_on:
      - redis
      - database
    command: >
      /app/rpc-endpoint
      -redis $(REDIS_ADDR)
      -signingKey $(SIGNING_KEY)
      -proxy $(PROXY_URL)
      -listen $(LISTEN_ADDR)
      -relayUrl $(RELAY_URL)
      -psql $(PSQL_CONN)
